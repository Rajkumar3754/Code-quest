{"ast":null,"code":"useEffect(() => {\n  const fetchMovies = async () => {\n    try {\n      console.log(\"Using API Key:\", `\"${APIkey}\"`); // Logging the API key to verify its format\n      const response = await axios.get(`https://www.omdbapi.com/?apiKey=${APIkey.trim()}&s=${movieText}&type=movie`);\n      console.log(\"The response from API: \", response.data);\n      dispatch(addMovies(response.data)); // Dispatching inside the try block\n    } catch (err) {\n      console.error(\"Error fetching movies:\", err);\n      if (err.response) {\n        console.error(\"Response data:\", err.response.data);\n        console.error(\"Response status:\", err.response.status);\n        console.error(\"Response headers:\", err.response.headers);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  fetchMovies();\n}, [dispatch]); // Include dispatch in the dependency array","map":{"version":3,"names":["useEffect","fetchMovies","console","log","APIkey","response","axios","get","trim","movieText","data","dispatch","addMovies","err","error","status","headers","request","message"],"sources":["C:/Users/urajk/OneDrive/Desktop/Redux toolkit/movieratingapp/src/components/Home/Home.js"],"sourcesContent":["useEffect(() => {\r\n  const fetchMovies = async () => {\r\n    try {\r\n      console.log(\"Using API Key:\", `\"${APIkey}\"`);  // Logging the API key to verify its format\r\n      const response = await axios.get(`https://www.omdbapi.com/?apiKey=${APIkey.trim()}&s=${movieText}&type=movie`);\r\n      console.log(\"The response from API: \", response.data);\r\n      dispatch(addMovies(response.data)); // Dispatching inside the try block\r\n    } catch (err) {\r\n      console.error(\"Error fetching movies:\", err);\r\n      if (err.response) {\r\n        console.error(\"Response data:\", err.response.data);\r\n        console.error(\"Response status:\", err.response.status);\r\n        console.error(\"Response headers:\", err.response.headers);\r\n      } else if (err.request) {\r\n        console.error(\"Request data:\", err.request);\r\n      } else {\r\n        console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  fetchMovies();\r\n}, [dispatch]); // Include dispatch in the dependency array\r\n"],"mappings":"AAAAA,SAAS,CAAC,MAAM;EACd,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,IAAIC,MAAM,GAAG,CAAC,CAAC,CAAE;MAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,mCAAmCH,MAAM,CAACI,IAAI,CAAC,CAAC,MAAMC,SAAS,aAAa,CAAC;MAC9GP,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEE,QAAQ,CAACK,IAAI,CAAC;MACrDC,QAAQ,CAACC,SAAS,CAACP,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZX,OAAO,CAACY,KAAK,CAAC,wBAAwB,EAAED,GAAG,CAAC;MAC5C,IAAIA,GAAG,CAACR,QAAQ,EAAE;QAChBH,OAAO,CAACY,KAAK,CAAC,gBAAgB,EAAED,GAAG,CAACR,QAAQ,CAACK,IAAI,CAAC;QAClDR,OAAO,CAACY,KAAK,CAAC,kBAAkB,EAAED,GAAG,CAACR,QAAQ,CAACU,MAAM,CAAC;QACtDb,OAAO,CAACY,KAAK,CAAC,mBAAmB,EAAED,GAAG,CAACR,QAAQ,CAACW,OAAO,CAAC;MAC1D,CAAC,MAAM,IAAIH,GAAG,CAACI,OAAO,EAAE;QACtBf,OAAO,CAACY,KAAK,CAAC,eAAe,EAAED,GAAG,CAACI,OAAO,CAAC;MAC7C,CAAC,MAAM;QACLf,OAAO,CAACY,KAAK,CAAC,gBAAgB,EAAED,GAAG,CAACK,OAAO,CAAC;MAC9C;IACF;EACF,CAAC;EAEDjB,WAAW,CAAC,CAAC;AACf,CAAC,EAAE,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}